---
- name: "Image with nested virtualization is required"
  fail:
    msg: |
      1- Follow the steps https://cloud.google.com/compute/docs/instances/enable-nested-virtualization-vm-instances.
      2- Create new image named nested-centos-7.
      3- When done uncomment nested_virtualization_configured variable from darkbulb_config.yml
  when: nested_virtualization_configured is not defined

- name: "Ensure instance(s) state is present"
  gce:
    base_name: "{{ gce_cloud_instance_base_name }}"
    num_instances: "{{ gce_cloud_num_instances }}"
    zone: "{{ gce_cloud_instance_zone }}"
    machine_type: "{{ gce_cloud_instance_machine_type }}"
    image: "{{ gce_cloud_instance_image }}"
    service_account_email: "{{ gce_cloud_instance_service_account_email }}"
    credentials_file: "{{ gce_cloud_instance_credentials_file }}"
    project_id: "{{ gce_cloud_instance_project_id }}"
    tags: "{{ gce_cloud_instance_tags }}"
    state: present
  register: return_gce_cloud_instance
  until: return_gce_cloud_instance.state == 'present'
  retries: 5
  delay: 10
  tags:
    - create

- debug: var=return_gce_cloud_instance
  when: gce_cloud_instance_debug
  tags:
    - create

- name: "Ensure instance(s) state is started"
  gce:
    base_name: "{{ gce_cloud_instance_base_name }}"
    num_instances: "{{ gce_cloud_num_instances }}"
    zone: "{{ gce_cloud_instance_zone }}"
    machine_type: "{{ gce_cloud_instance_machine_type }}"
    image: "{{ gce_cloud_instance_image }}"
    service_account_email: "{{ gce_cloud_instance_service_account_email }}"
    credentials_file: "{{ gce_cloud_instance_credentials_file }}"
    project_id: "{{ gce_cloud_instance_project_id }}"
    tags: "{{ gce_cloud_instance_tags }}"
    state: started
  register: return_gce_cloud_instance_status
  until: return_gce_cloud_instance_status.state == 'started'
  retries: 5
  delay: 10
  tags:
    - create

- debug: var=return_gce_cloud_instance_status
  when: gce_cloud_instance_debug
  tags:
    - create

- name: "Update instance(s) list of public_ip"
  gce:
    base_name: "{{ gce_cloud_instance_base_name }}"
    num_instances: "{{ gce_cloud_num_instances }}"
    zone: "{{ gce_cloud_instance_zone }}"
    machine_type: "{{ gce_cloud_instance_machine_type }}"
    image: "{{ gce_cloud_instance_image }}"
    service_account_email: "{{ gce_cloud_instance_service_account_email }}"
    credentials_file: "{{ gce_cloud_instance_credentials_file }}"
    project_id: "{{ gce_cloud_instance_project_id }}"
    tags: "{{ gce_cloud_instance_tags }}"
    state: present
  register: return_gce_cloud_instance

- debug: var=return_gce_cloud_instance
  when: gce_cloud_instance_debug
  tags:
    - create

- name: "Add instance to inventory groups [ darkbulb ]"
  add_host:
    name: "{{ item.name }}"
    ansible_host: "{{ item.public_ip }}"
    student: "{{ item.name }}"
    groupname: "darkbulb"
  with_items: "{{ return_gce_cloud_instance.instance_data }}"
  when: return_gce_cloud_instance.instance_data
  tags:
    - create

- name: "Wait for SSH for student instance"
  wait_for:
    delay: 20
    host: "{{ item.public_ip }}"
    port: 22
    state: started
    timeout: 120
  with_items: "{{ return_gce_cloud_instance.instance_data }}"
  when: return_gce_cloud_instance.instance_data
  tags:
    - create
